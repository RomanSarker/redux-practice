const {createStore} = require("redux");

//state- count:0
//action- increment, decrement,reset
//reducer
//store

//CONSTANT
const INCREMENT = "INCREMENT";
const DECREMENT = "DECREMENT";
const INCREMENT_BY_VALUE = "INCREMENT_BY_VALUE";
const RESET = "RESET";

const initialState = {
   users: ['roman'],
   count: 0,
};

const incrementCounterAction = () => {
    return {
        type: INCREMENT,
    };
};

const decrementCounterAction = () => {
    return {
        type: DECREMENT,
    };
};

const resetCounterAction = () => {
    return {
        type: RESET,
    };
};
const incrementCounterByValue = (value) => {
    return {
        type: INCREMENT_BY_VALUE,
        payload: value,
    };
};

//CREATING REDUSER TO BUILD LOGIC

const counterReducer = (state=initialState, action) => {

    switch (action.type) {
        case INCREMENT:
            return {
                ...state,
                count: state.count + 1,
            }
            case DECREMENT:
            return {
                ...state,
                count: state.count - 1,
            }
            case RESET:
            return {
                ...state,
                count: 0,
            }

            case INCREMENT_BY_VALUE:
                return {
                    ...state,
                    count: state.count + action.payload,
                }
        
    
        default:
            state;
    }
}

//STORE
const store = createStore(counterReducer);

store.subscribe(()=>{
    console.log(store.getState());
})

// store.dispatch(incrementCounterAction());
// store.dispatch(incrementCounterAction());
// store.dispatch(incrementCounterAction());
// store.dispatch(decrementCounterAction());
// store.dispatch(resetCounterAction());

store.dispatch(incrementCounterByValue(5));
store.dispatch(incrementCounterByValue(10));
store.dispatch(incrementCounterByValue(10));
